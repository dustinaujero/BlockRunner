/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./game.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./components/game.js":
/*!****************************!*\
  !*** ./components/game.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game_setup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game_setup */ \"./components/game_setup.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Game =\n/*#__PURE__*/\nfunction () {\n  function Game(diffSetting, windowWidth) {\n    _classCallCheck(this, Game);\n\n    this.frame = 0;\n    this.keyboard = {};\n    this.cubes = [];\n    this.yLevels = [0, -1, -1.5, -2, -2.5];\n    this.diffSetting = diffSetting;\n    this.score = 0;\n    this.uiScore = document.getElementById(\"score\");\n    this.scene = new THREE.Scene();\n    this.camera = Object(_game_setup__WEBPACK_IMPORTED_MODULE_0__[\"setupCamera\"])();\n    this.player = Object(_game_setup__WEBPACK_IMPORTED_MODULE_0__[\"setupPlayer\"])(this.scene);\n    this.player2 = Object(_game_setup__WEBPACK_IMPORTED_MODULE_0__[\"setupPlayer\"])(this.scene, true);\n    Object(_game_setup__WEBPACK_IMPORTED_MODULE_0__[\"setupMap\"])(this.scene);\n    this.spotLight = Object(_game_setup__WEBPACK_IMPORTED_MODULE_0__[\"setupLight\"])(this.scene, false);\n    this.playerDY = 0;\n    this.playerDX = 0;\n    this.player2DY = 0;\n    this.player2DX = 0;\n    this.renderer = new THREE.WebGLRenderer(); // this.renderer.setSize(windowWidth*0.7, (windowWidth*0.40));\n\n    this.renderer.setSize(900, 525);\n    this.renderer.physicallyCorrectLights = true;\n    document.body.appendChild(this.renderer.domElement);\n    window.addEventListener('keydown', this.keyDown.bind(this));\n    window.addEventListener('keyup', this.keyUp.bind(this));\n    this.animate = this.animate.bind(this);\n    this.detectCollision = this.detectCollision.bind(this);\n  }\n\n  _createClass(Game, [{\n    key: \"animate\",\n    value: function animate() {\n      var _this = this;\n\n      debugger; // PLAYER MOVEMENT\n\n      if (this.keyboard[37] === true) {\n        //LEFT\n        if (this.player.position.x >= -3) {\n          this.playerDX -= 0.020 + this.diffSetting * 0.005;\n        }\n      }\n\n      if (this.keyboard[39] === true) {\n        //RIGHT\n        if (this.player.position.x <= 3) {\n          this.playerDX += 0.020 + this.diffSetting * 0.005;\n        }\n      }\n\n      if (this.keyboard[38] === true) {\n        //UP\n        if (this.player.position.y <= 0) {\n          this.player.position.y += 0.3;\n          this.playerDY = 0.09 + this.diffSetting * 0.005;\n        }\n      }\n\n      if (this.keyboard[40] === true) {\n        //DOWN\n        if (this.player.position.y >= -2.5) {\n          this.player.position.y -= 0.2 + this.diffSetting * 0.005;\n        }\n      } //PLAYER2\n\n\n      if (this.keyboard[65] === true) {\n        //LEFT\n        if (this.player2.position.x >= -3) {\n          this.player2DX -= 0.020 + this.diffSetting * 0.005;\n        }\n      }\n\n      if (this.keyboard[68] === true) {\n        //RIGHT\n        if (this.player2.position.x <= 3) {\n          this.player2DX += 0.020 + this.diffSetting * 0.005;\n        }\n      }\n\n      if (this.keyboard[87] === true) {\n        //UP\n        if (this.player2.position.y <= 0) {\n          this.player2.position.y += 0.3;\n          this.player2DY = 0.09 + this.diffSetting * 0.005;\n        }\n      }\n\n      if (this.keyboard[83] === true) {\n        //DOWN\n        if (this.player2.position.y >= -2.5) {\n          this.player2.position.y -= 0.2 + this.diffSetting * 0.005;\n        }\n      } // PLAYER MOVEMENT\n      // CUBE MOVEMENT\n\n\n      this.cubes.forEach(function (cube) {\n        if (cube.position.z >= 5) {\n          _this.scene.remove(cube);\n        } else {\n          switch (_this.diffSetting) {\n            case 1:\n              {\n                cube.position.z += 0.5;\n                break;\n              }\n\n            case 2:\n              {\n                cube.position.z += 0.8;\n                break;\n              }\n\n            case 3:\n              {\n                cube.position.z += 1;\n                break;\n              }\n\n            case 4:\n              {\n                cube.position.z += 1.3;\n                break;\n              }\n\n            case 5:\n              {\n                cube.position.z += 1.7;\n                break;\n              }\n          }\n\n          if (_this.frame > 3000) {\n            cube.position.z += 0.3;\n          }\n\n          if (_this.frame > 5400) {\n            cube.position.z += 0.3;\n          }\n        }\n      }); //SCORE\n\n      if (this.frame % 60 === 0) {\n        this.uiScore.innerHTML = \"Score: \".concat(this.score++);\n      } //SCORE\n      // CUBE MOVEMENT\n      // PHASE 1\n\n\n      if (++this.frame % 10 == 0) this.renderNewCube(); // PHASE 2\n\n      if (this.rame > 600 && this.frame % 10 == 0) this.renderNewCube(); // PHASE 3\n\n      if (this.frame > 1200 && this.frame % 10 == 0) this.renderBar(); // PHASE 4\n\n      if (this.frame > 1800 && this.frame % 10 == 0) this.renderNewSphere(); // after 50 sec, more chaos\n\n      if (this.frame > 3000) {\n        this.camera.rotation.z = -this.player.position.x * 0.07;\n        this.spotLight.position.x = this.player.position.x;\n      }\n\n      ; // remove cubes from array after 6 sec\n\n      if (this.frame > 360 && this.frame % 10 == 0) {\n        this.cubes.shift();\n      } // X FRICTION\n\n\n      this.playerDX *= 0.9 + this.diffSetting * 0.005;\n      this.player2DX *= 0.9 + this.diffSetting * 0.005; // GRAVITY\n\n      this.playerDY -= 0.009 + this.diffSetting * 0.005;\n      this.player2DY -= 0.009 + this.diffSetting * 0.005;\n\n      if (this.player.position.y >= -2.5) {\n        this.player.position.y += this.playerDY;\n      }\n\n      if (this.player2.position.y >= -2.5) {\n        this.player2.position.y += this.player2DY;\n      } // CAMERA FOLLOWS PLAYER\n\n\n      this.player.position.x += this.playerDX;\n      this.player2.position.x += this.player2DX;\n      this.camera.position.x = (this.player.position.x + this.player2.position.x / 2) * 0.4;\n      this.camera.position.y = (this.player.position.y + this.player2.position.x / 2) * 0.4; // collision detection\n\n      var game = requestAnimationFrame(this.animate);\n      this.detectCollision(this.player, game);\n      this.detectCollision(this.player2, game);\n      this.renderer.render(this.scene, this.camera);\n    }\n  }, {\n    key: \"detectCollision\",\n    value: function detectCollision(player, game) {\n      var _this2 = this;\n\n      var originPoint = player.position.clone();\n      var collisionDetected = true;\n\n      for (var vertexIndex = 0; vertexIndex < player.geometry.vertices.length; vertexIndex++) {\n        var localVertex = player.geometry.vertices[vertexIndex].clone();\n        var globalVertex = localVertex.applyMatrix4(player.matrix);\n        var directionVector = globalVertex.sub(player.position);\n        var ray = new THREE.Raycaster(originPoint, directionVector.clone().normalize());\n        var collisionResults = ray.intersectObjects(this.cubes);\n\n        if (collisionResults.length === 1 && collisionResults[0].distance < directionVector.length() && collisionResults[0].object.position.z > -0.25 && collisionDetected) {\n          (function () {\n            collisionResults[0].object.material.transparent = true;\n            collisionResults[0].object.material.opacity = 0.4;\n            collisionResults[0].object.material.color.setHex(0xFF0000);\n            cancelAnimationFrame(game);\n            var name = prompt(\"What is your name?\");\n            database.ref().push({\n              name: name,\n              score: _this2.score\n            });\n            var scores = [];\n            var list = document.createElement('ul');\n            var highscores = document.getElementById(\"highscores\");\n            var oldList = highscores.childNodes[1];\n\n            var compare = function compare(b, a) {\n              if (a.score < b.score) {\n                return -1;\n              }\n\n              if (a.score > b.score) {\n                return 1;\n              }\n\n              return 0;\n            };\n\n            database.ref().orderByChild(\"score\").limitToLast(3).on(\"value\", function (snapshot) {\n              snapshot.forEach(function (childSnapshot) {\n                var name = childSnapshot.val().name;\n                var score = childSnapshot.val().score;\n                scores.push({\n                  name: name,\n                  score: score\n                });\n              });\n              scores.sort(compare);\n\n              for (var i = 0; i <= scores.length - 1; i++) {\n                var listItem = document.createElement(\"li\");\n                listItem.innerHTML = \"\".concat(i + 1, \". \") + \" \" + scores[i].name + \" - \" + scores[i].score;\n                list.appendChild(listItem);\n              }\n            });\n            highscores.replaceChild(list, oldList);\n            collisionDetected = false;\n          })();\n        }\n      }\n    }\n  }, {\n    key: \"renderNewCube\",\n    value: function renderNewCube() {\n      var shape = new THREE.BoxGeometry(1, 1, 1);\n      var material = new THREE.MeshStandardMaterial({\n        color: 0xffffff\n      });\n      var box = new THREE.Mesh(shape, material);\n      this.cubes.push(box);\n      var xCord = Math.random() * 12 - 6;\n      var ySample = this.yLevels[Math.floor(Math.random() * this.yLevels.length)];\n      box.position.set(xCord, ySample, -50);\n      box.castShadow = true;\n      box.receiveShadow = true;\n      this.scene.add(box);\n    }\n  }, {\n    key: \"renderNewSphere\",\n    value: function renderNewSphere() {\n      if (Math.random() >= 0.8) {\n        var shape = new THREE.SphereGeometry(0.5);\n        var material = new THREE.MeshStandardMaterial({\n          color: 0xffffff\n        });\n        var sphere = new THREE.Mesh(shape, material);\n        this.cubes.push(sphere);\n        var xCord = Math.random() * 12 - 6;\n        var ySample = this.yLevels[Math.floor(Math.random() * this.yLevels.length)];\n        sphere.position.set(xCord, ySample, -50);\n        sphere.castShadow = true;\n        sphere.receiveShadow = true;\n        this.scene.add(sphere);\n      }\n    }\n  }, {\n    key: \"renderBar\",\n    value: function renderBar() {\n      if (Math.random() >= 0.95) {\n        var shape = new THREE.BoxGeometry(10, 1, 1);\n        var material = new THREE.MeshStandardMaterial({\n          color: 0xffffff\n        });\n        var box = new THREE.Mesh(shape, material);\n        this.cubes.push(box);\n        var ySample = this.yLevels[Math.floor(Math.random() * this.yLevels.length)];\n        var xCord = Math.random() * 12 - 6;\n        box.position.set(xCord, ySample, -50);\n        box.castShadow = true;\n        box.receiveShadow = true;\n        this.scene.add(box);\n      }\n    }\n  }, {\n    key: \"keyDown\",\n    value: function keyDown(e) {\n      this.keyboard[e.keyCode] = true;\n    }\n  }, {\n    key: \"keyUp\",\n    value: function keyUp(e) {\n      this.keyboard[e.keyCode] = false;\n    }\n  }]);\n\n  return Game;\n}();\n\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/game.js\n");

/***/ }),

/***/ "./components/game_setup.js":
/*!**********************************!*\
  !*** ./components/game_setup.js ***!
  \**********************************/
/*! exports provided: setupCamera, setupPlayer, setupLight, setupMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupCamera\", function() { return setupCamera; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupPlayer\", function() { return setupPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupLight\", function() { return setupLight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupMap\", function() { return setupMap; });\nvar setupCamera = function setupCamera() {\n  var camera = new THREE.PerspectiveCamera(50, 1200 / 720, 0.1, 1000);\n  camera.position.set(0, 5, 5);\n  return camera;\n};\nvar setupPlayer = function setupPlayer(scene, color) {\n  var shape = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n  var material;\n\n  if (color) {\n    material = new THREE.MeshStandardMaterial({\n      color: 0x008000\n    });\n  } else {\n    material = new THREE.MeshStandardMaterial({\n      color: 0xFF0000\n    });\n  }\n\n  var player = new THREE.Mesh(shape, material);\n  player.position.set(0, -1.5, 0);\n  player.castShadow = true;\n  player.receiveShadow = true;\n  scene.add(player);\n  return player;\n};\nvar setupLight = function setupLight(scene, ambientLight) {\n  if (ambientLight) {\n    var amb = new THREE.AmbientLight(0xffffff, 1, 0, 0.1, 0, 1);\n    scene.add(amb);\n  }\n\n  var spotLight = new THREE.SpotLight(0xffffff, 50, 0, 0.3, 0, 1);\n  spotLight.position.set(0, 5, 15);\n  spotLight.castShadow = true;\n  spotLight.shadow.mapSize.width = 1024;\n  spotLight.shadow.mapSize.height = 1024;\n  spotLight.shadow.camera.near = 0.0;\n  spotLight.shadow.camera.far = -4000;\n  spotLight.lookAt(new THREE.Vector3(0, 5, 0));\n  scene.add(spotLight);\n  return spotLight;\n};\nvar setupMap = function setupMap(scene) {\n  var floor = new THREE.Mesh(new THREE.PlaneGeometry(15, 250), new THREE.MeshStandardMaterial({\n    color: 0xC8C8C8\n  }));\n  floor.rotation.x -= Math.PI / 2;\n  floor.position.set(0, -3.1, 0);\n  floor.receiveShadow = true;\n  floor.castShadow = true;\n  scene.add(floor);\n  var rightWall = new THREE.Mesh(new THREE.PlaneGeometry(15, 250), new THREE.MeshStandardMaterial({\n    color: 0xffffff,\n    wireframe: false\n  }));\n  rightWall.rotation.x -= Math.PI / 2;\n  rightWall.rotation.y -= Math.PI / 2;\n  rightWall.position.set(7, -2, 0);\n  rightWall.receiveShadow = true;\n  rightWall.castShadow = true;\n  scene.add(rightWall);\n  var leftWall = new THREE.Mesh(new THREE.PlaneGeometry(15, 250), new THREE.MeshStandardMaterial({\n    color: 0xC8C8C8,\n    wireframe: false\n  }));\n  leftWall.rotation.x -= Math.PI / 2;\n  leftWall.rotation.y += Math.PI / 2;\n  leftWall.position.set(-7, -2, 0);\n  leftWall.receiveShadow = true;\n  leftWall.castShadow = true;\n  scene.add(leftWall);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/game_setup.js\n");

/***/ }),

/***/ "./game.js":
/*!*****************!*\
  !*** ./game.js ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/game */ \"./components/game.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  window.game = new _components_game__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n  window.newGame = function (diffSetting) {\n    document.body.removeChild(document.body.children[7]);\n    var game = new _components_game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](diffSetting, window.innerWidth);\n    return game;\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9nYW1lLmpzPzM2NTciXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwid2luZG93IiwiZ2FtZSIsIkdhbWUiLCJuZXdHYW1lIiwiZGlmZlNldHRpbmciLCJib2R5IiwicmVtb3ZlQ2hpbGQiLCJjaGlsZHJlbiIsImlubmVyV2lkdGgiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUVBQSxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxZQUFNO0FBQ2hEQyxRQUFNLENBQUNDLElBQVAsR0FBYyxJQUFJQyx3REFBSixFQUFkOztBQUNBRixRQUFNLENBQUNHLE9BQVAsR0FBaUIsVUFBQ0MsV0FBRCxFQUFpQjtBQUM5Qk4sWUFBUSxDQUFDTyxJQUFULENBQWNDLFdBQWQsQ0FBMEJSLFFBQVEsQ0FBQ08sSUFBVCxDQUFjRSxRQUFkLENBQXVCLENBQXZCLENBQTFCO0FBQ0EsUUFBTU4sSUFBSSxHQUFHLElBQUlDLHdEQUFKLENBQVNFLFdBQVQsRUFBc0JKLE1BQU0sQ0FBQ1EsVUFBN0IsQ0FBYjtBQUNBLFdBQU9QLElBQVA7QUFDSCxHQUpEO0FBS0gsQ0FQRCIsImZpbGUiOiIuL2dhbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2FtZSBmcm9tICcuL2NvbXBvbmVudHMvZ2FtZSc7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICB3aW5kb3cuZ2FtZSA9IG5ldyBHYW1lKCk7XG4gICAgd2luZG93Lm5ld0dhbWUgPSAoZGlmZlNldHRpbmcpID0+IHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkb2N1bWVudC5ib2R5LmNoaWxkcmVuWzddKTtcbiAgICAgICAgY29uc3QgZ2FtZSA9IG5ldyBHYW1lKGRpZmZTZXR0aW5nLCB3aW5kb3cuaW5uZXJXaWR0aCk7XG4gICAgICAgIHJldHVybiBnYW1lO1xuICAgIH1cbn0pIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./game.js\n");

/***/ })

/******/ });