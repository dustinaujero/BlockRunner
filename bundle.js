/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./game.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./components/setup_game.js":
/*!**********************************!*\
  !*** ./components/setup_game.js ***!
  \**********************************/
/*! exports provided: setupCamera, setupPlayer, setupLight, setupMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupCamera\", function() { return setupCamera; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupPlayer\", function() { return setupPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupLight\", function() { return setupLight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupMap\", function() { return setupMap; });\nvar setupCamera = function setupCamera() {\n  var camera = new THREE.PerspectiveCamera(50, 1200 / 720, 0.1, 1000);\n  camera.position.set(0, 5, 5);\n  return camera;\n};\nvar setupPlayer = function setupPlayer(scene) {\n  var shape = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n  var material = new THREE.MeshStandardMaterial({\n    color: 0xFF0000\n  });\n  var player = new THREE.Mesh(shape, material);\n  player.position.set(0, -1.5, 0);\n  player.castShadow = true;\n  player.receiveShadow = true;\n  scene.add(player);\n  return player;\n};\nvar setupLight = function setupLight(scene, ambientLight) {\n  if (ambientLight) {\n    var amb = new THREE.AmbientLight(0xffffff, 1, 0, 0.1, 0, 1);\n    scene.add(amb);\n  }\n\n  var spotLight = new THREE.SpotLight(0xffffff, 50, 0, 0.3, 0, 1);\n  spotLight.position.set(0, 5, 15);\n  spotLight.castShadow = true;\n  spotLight.shadow.mapSize.width = 1024;\n  spotLight.shadow.mapSize.height = 1024;\n  spotLight.shadow.camera.near = 0.0;\n  spotLight.shadow.camera.far = -4000;\n  spotLight.lookAt(new THREE.Vector3(0, 5, 0));\n  scene.add(spotLight);\n  return spotLight;\n};\nvar setupMap = function setupMap(scene) {\n  var floor = new THREE.Mesh(new THREE.PlaneGeometry(15, 250), new THREE.MeshStandardMaterial({\n    color: 0xC8C8C8\n  }));\n  floor.rotation.x -= Math.PI / 2;\n  floor.position.set(0, -3.1, 0);\n  floor.receiveShadow = true;\n  floor.castShadow = true;\n  scene.add(floor);\n  var rightWall = new THREE.Mesh(new THREE.PlaneGeometry(15, 250), new THREE.MeshStandardMaterial({\n    color: 0xffffff,\n    wireframe: false\n  }));\n  rightWall.rotation.x -= Math.PI / 2;\n  rightWall.rotation.y -= Math.PI / 2;\n  rightWall.position.set(7, -2, 0);\n  rightWall.receiveShadow = true;\n  rightWall.castShadow = true;\n  scene.add(rightWall);\n  var leftWall = new THREE.Mesh(new THREE.PlaneGeometry(15, 250), new THREE.MeshStandardMaterial({\n    color: 0xC8C8C8,\n    wireframe: false\n  }));\n  leftWall.rotation.x -= Math.PI / 2;\n  leftWall.rotation.y += Math.PI / 2;\n  leftWall.position.set(-7, -2, 0);\n  leftWall.receiveShadow = true;\n  leftWall.castShadow = true;\n  scene.add(leftWall);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3NldHVwX2dhbWUuanM/MmY0ZiJdLCJuYW1lcyI6WyJzZXR1cENhbWVyYSIsImNhbWVyYSIsIlRIUkVFIiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJwb3NpdGlvbiIsInNldCIsInNldHVwUGxheWVyIiwic2NlbmUiLCJzaGFwZSIsIkJveEdlb21ldHJ5IiwibWF0ZXJpYWwiLCJNZXNoU3RhbmRhcmRNYXRlcmlhbCIsImNvbG9yIiwicGxheWVyIiwiTWVzaCIsImNhc3RTaGFkb3ciLCJyZWNlaXZlU2hhZG93IiwiYWRkIiwic2V0dXBMaWdodCIsImFtYmllbnRMaWdodCIsImFtYiIsIkFtYmllbnRMaWdodCIsInNwb3RMaWdodCIsIlNwb3RMaWdodCIsInNoYWRvdyIsIm1hcFNpemUiLCJ3aWR0aCIsImhlaWdodCIsIm5lYXIiLCJmYXIiLCJsb29rQXQiLCJWZWN0b3IzIiwic2V0dXBNYXAiLCJmbG9vciIsIlBsYW5lR2VvbWV0cnkiLCJyb3RhdGlvbiIsIngiLCJNYXRoIiwiUEkiLCJyaWdodFdhbGwiLCJ3aXJlZnJhbWUiLCJ5IiwibGVmdFdhbGwiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBTyxJQUFNQSxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFNO0FBQzdCLE1BQU1DLE1BQU0sR0FBRyxJQUFJQyxLQUFLLENBQUNDLGlCQUFWLENBQTRCLEVBQTVCLEVBQWdDLE9BQU8sR0FBdkMsRUFBNEMsR0FBNUMsRUFBaUQsSUFBakQsQ0FBZjtBQUNBRixRQUFNLENBQUNHLFFBQVAsQ0FBZ0JDLEdBQWhCLENBQW9CLENBQXBCLEVBQXVCLENBQXZCLEVBQTBCLENBQTFCO0FBQ0EsU0FBT0osTUFBUDtBQUNILENBSk07QUFNQSxJQUFNSyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxLQUFELEVBQVc7QUFDbEMsTUFBTUMsS0FBSyxHQUFHLElBQUlOLEtBQUssQ0FBQ08sV0FBVixDQUFzQixH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QUMxQixhQUFULEdBQXlCLElBQXpCO0FBQ0EwQixVQUFRLENBQUMzQixVQUFULEdBQXNCLElBQXRCO0FBQ0FSLE9BQUssQ0FBQ1UsR0FBTixDQUFVeUIsUUFBVjtBQUNILENBL0JNIiwiZmlsZSI6Ii4vY29tcG9uZW50cy9zZXR1cF9nYW1lLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHNldHVwQ2FtZXJhID0gKCkgPT4ge1xuICAgIGNvbnN0IGNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYSg1MCwgMTIwMCAvIDcyMCwgMC4xLCAxMDAwKTtcbiAgICBjYW1lcmEucG9zaXRpb24uc2V0KDAsIDUsIDUpO1xuICAgIHJldHVybiBjYW1lcmE7XG59O1xuXG5leHBvcnQgY29uc3Qgc2V0dXBQbGF5ZXIgPSAoc2NlbmUpID0+IHtcbiAgICBjb25zdCBzaGFwZSA9IG5ldyBUSFJFRS5Cb3hHZW9tZXRyeSgwLjUsIDAuNSwgMC41KTtcbiAgICBjb25zdCBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoU3RhbmRhcmRNYXRlcmlhbCh7IGNvbG9yOiAweEZGMDAwMCB9KTtcbiAgICBjb25zdCBwbGF5ZXIgPSBuZXcgVEhSRUUuTWVzaChzaGFwZSwgbWF0ZXJpYWwpO1xuICAgIHBsYXllci5wb3NpdGlvbi5zZXQoMCwgLTEuNSwgMCk7XG4gICAgcGxheWVyLmNhc3RTaGFkb3cgPSB0cnVlO1xuICAgIHBsYXllci5yZWNlaXZlU2hhZG93ID0gdHJ1ZTtcbiAgICBzY2VuZS5hZGQocGxheWVyKTtcbiAgICByZXR1cm4gcGxheWVyO1xufTtcblxuZXhwb3J0IGNvbnN0IHNldHVwTGlnaHQgPSAoc2NlbmUsIGFtYmllbnRMaWdodCkgPT4ge1xuICAgIGlmIChhbWJpZW50TGlnaHQpIHtcbiAgICAgICAgY29uc3QgYW1iID0gbmV3IFRIUkVFLkFtYmllbnRMaWdodCgweGZmZmZmZiwgMSwgMCwgMC4xLCAwLCAxKTtcbiAgICAgICAgc2NlbmUuYWRkKGFtYik7XG4gICAgfVxuICAgIGNvbnN0IHNwb3RMaWdodCA9IG5ldyBUSFJFRS5TcG90TGlnaHQoMHhmZmZmZmYsIDUwLCAwLCAwLjMsIDAsIDEpO1xuICAgIHNwb3RMaWdodC5wb3NpdGlvbi5zZXQoMCwgNSwgMTUpO1xuICAgIHNwb3RMaWdodC5jYXN0U2hhZG93ID0gdHJ1ZTtcbiAgICBzcG90TGlnaHQuc2hhZG93Lm1hcFNpemUud2lkdGggPSAxMDI0O1xuICAgIHNwb3RMaWdodC5zaGFkb3cubWFwU2l6ZS5oZWlnaHQgPSAxMDI0O1xuICAgIHNwb3RMaWdodC5zaGFkb3cuY2FtZXJhLm5lYXIgPSAwLjA7XG4gICAgc3BvdExpZ2h0LnNoYWRvdy5jYW1lcmEuZmFyID0gLTQwMDA7XG4gICAgc3BvdExpZ2h0Lmxvb2tBdChuZXcgVEhSRUUuVmVjdG9yMygwLCA1LCAwKSk7XG4gICAgc2NlbmUuYWRkKHNwb3RMaWdodCk7ICAgIFxuICAgIHJldHVybiBzcG90TGlnaHQ7XG59O1xuXG5leHBvcnQgY29uc3Qgc2V0dXBNYXAgPSAoc2NlbmUpID0+IHtcbiAgICBjb25zdCBmbG9vciA9IG5ldyBUSFJFRS5NZXNoKFxuICAgICAgICBuZXcgVEhSRUUuUGxhbmVHZW9tZXRyeSgxNSwgMjUwKSwgbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKHsgY29sb3I6IDB4QzhDOEM4IH0pXG4gICAgKTtcbiAgICBmbG9vci5yb3RhdGlvbi54IC09IE1hdGguUEkgLyAyO1xuICAgIGZsb29yLnBvc2l0aW9uLnNldCgwLCAtMy4xLCAwKTtcbiAgICBmbG9vci5yZWNlaXZlU2hhZG93ID0gdHJ1ZTtcbiAgICBmbG9vci5jYXN0U2hhZG93ID0gdHJ1ZTtcbiAgICBzY2VuZS5hZGQoZmxvb3IpO1xuXG5cbiAgICBjb25zdCByaWdodFdhbGwgPSBuZXcgVEhSRUUuTWVzaChcbiAgICAgICAgbmV3IFRIUkVFLlBsYW5lR2VvbWV0cnkoMTUsIDI1MCksIG5ldyBUSFJFRS5NZXNoU3RhbmRhcmRNYXRlcmlhbCh7IGNvbG9yOiAweGZmZmZmZiwgd2lyZWZyYW1lOiBmYWxzZSB9KVxuICAgICk7XG4gICAgcmlnaHRXYWxsLnJvdGF0aW9uLnggLT0gTWF0aC5QSSAvIDI7XG4gICAgcmlnaHRXYWxsLnJvdGF0aW9uLnkgLT0gTWF0aC5QSSAvIDI7XG4gICAgcmlnaHRXYWxsLnBvc2l0aW9uLnNldCg3LCAtMiwgMCk7XG4gICAgcmlnaHRXYWxsLnJlY2VpdmVTaGFkb3cgPSB0cnVlO1xuICAgIHJpZ2h0V2FsbC5jYXN0U2hhZG93ID0gdHJ1ZTtcbiAgICBzY2VuZS5hZGQocmlnaHRXYWxsKTtcblxuXG4gICAgY29uc3QgbGVmdFdhbGwgPSBuZXcgVEhSRUUuTWVzaChcbiAgICAgICAgbmV3IFRIUkVFLlBsYW5lR2VvbWV0cnkoMTUsIDI1MCksIG5ldyBUSFJFRS5NZXNoU3RhbmRhcmRNYXRlcmlhbCh7IGNvbG9yOiAweEM4QzhDOCwgd2lyZWZyYW1lOiBmYWxzZSB9KVxuICAgICk7XG4gICAgbGVmdFdhbGwucm90YXRpb24ueCAtPSBNYXRoLlBJIC8gMjtcbiAgICBsZWZ0V2FsbC5yb3RhdGlvbi55ICs9IE1hdGguUEkgLyAyO1xuICAgIGxlZnRXYWxsLnBvc2l0aW9uLnNldCgtNywgLTIsIDApO1xuICAgIGxlZnRXYWxsLnJlY2VpdmVTaGFkb3cgPSB0cnVlO1xuICAgIGxlZnRXYWxsLmNhc3RTaGFkb3cgPSB0cnVlO1xuICAgIHNjZW5lLmFkZChsZWZ0V2FsbCk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/setup_game.js\n");

/***/ }),

/***/ "./game.js":
/*!*****************!*\
  !*** ./game.js ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_setup_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/setup_game */ \"./components/setup_game.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var scene, camera, renderer, player, spotLight;\n  var playerDY, playerDX;\n  var frame;\n  var keyboard = {};\n  var cubes = [];\n  var yLevels = [0, -1, -1.5, -2, -2.5];\n  var game;\n\n  var init = function init() {\n    frame = 0;\n    scene = new THREE.Scene();\n    camera = Object(_components_setup_game__WEBPACK_IMPORTED_MODULE_0__[\"setupCamera\"])();\n    player = Object(_components_setup_game__WEBPACK_IMPORTED_MODULE_0__[\"setupPlayer\"])(scene);\n    Object(_components_setup_game__WEBPACK_IMPORTED_MODULE_0__[\"setupMap\"])(scene);\n    spotLight = Object(_components_setup_game__WEBPACK_IMPORTED_MODULE_0__[\"setupLight\"])(scene, false);\n    playerDY = 0;\n    playerDX = 0;\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(1200, 720);\n    renderer.physicallyCorrectLights = true;\n    document.body.appendChild(renderer.domElement);\n    animate();\n  };\n\n  var animate = function animate() {\n    if (player.position.y < -3) {\n      player.position.y = -2.3;\n    }\n\n    if (keyboard[37]) {\n      //LEFT\n      if (player.position.x >= -6) {\n        playerDX -= 0.025;\n      }\n    }\n\n    if (keyboard[39]) {\n      //RIGHT\n      if (player.position.x <= 6) {\n        playerDX += 0.025;\n      }\n    }\n\n    if (keyboard[38]) {\n      //UP\n      if (player.position.y <= 0) {\n        player.position.y += 0.3;\n        playerDY = 0.09;\n      }\n    }\n\n    if (keyboard[40]) {\n      //DOWN\n      if (player.position.y >= -2.5) {}\n    }\n\n    cubes.forEach(function (cube) {\n      if (cube.position.z >= 5) {\n        scene.remove(cube);\n      } else {\n        // const cubePos = cube.position.clone();\n        // const cubeVertPos = cube.geometry.vertices.map( vertex => {\n        //     vertex.x += cubePos.x;\n        //     vertex.y += cubePos.y;\n        //     vertex.z += cubePos.z;\n        // });\n        // debugger\n        // cubeVertPos.forEach(vertex => {\n        //     if (\n        //         vertex.x > playerXRange[0] && vertex.x < playerXRange[1] \n        //         &&\n        //         vertex.y > playerYRange[0] && vertex.y < playerYRange[1]\n        //         &&\n        //         vertex.z > playerZRange[0] && vertex.z < plyaerZRange[1]\n        //         ) {\n        //             alert(\"game over\");\n        //         }\n        // });\n        if (frame > 3000) {\n          cube.position.z += 0.65;\n        } else {\n          cube.position.z += 0.5;\n        }\n      }\n    }); // PHASE 1\n\n    if (++frame % 10 == 0) renderNewCube(); // PHASE 2\n\n    if (frame > 600 && frame % 10 == 0) renderNewCube(); // PHASE 3\n\n    if (frame > 1200 && frame % 10 == 0) renderBar(); // PHASE 4\n\n    if (frame > 1800 && frame % 10 == 0) renderNewSphere(); // after 50 sec, more chaos\n\n    if (frame > 3000) {\n      camera.rotation.z = -player.position.x * 0.07;\n      spotLight.position.x = player.position.x;\n    }\n\n    ; // remove cubes from array after 6 sec\n\n    if (frame > 360 && frame % 10 == 0) {\n      cubes.shift();\n    }\n\n    playerDY -= 0.009;\n    playerDX *= 0.9;\n\n    if (player.position.y >= -2.5) {\n      player.position.y += playerDY;\n    }\n\n    player.position.x += playerDX;\n    camera.position.x = player.position.x * 0.4;\n    camera.position.y = player.position.y * 0.4; // const playerPos = player.position.clone();\n    // const playerXRange = [(player.geometry.vertices[0].x + playerPos.x), (player.geometry.vertices[4].x + playerPos.x)];\n    // const playerYRange = [(player.geometry.vertices[0].y + playerPos.y), (player.geometry.vertices[2].y + playerPos.y)];\n    // const playerZRange = [(player.geometry.vertices[0].z + playerPos.z), (player.geometry.vertices[1].z + playerPos.z)];\n    // collision detection\n\n    game = requestAnimationFrame(animate);\n    var originPoint = player.position.clone();\n\n    for (var vertexIndex = 0; vertexIndex < player.geometry.vertices.length; vertexIndex++) {\n      var localVertex = player.geometry.vertices[vertexIndex].clone();\n      var globalVertex = localVertex.applyMatrix4(player.matrix);\n      var directionVector = globalVertex.sub(player.position);\n      var ray = new THREE.Raycaster(originPoint, directionVector.clone().normalize());\n      var collisionResults = ray.intersectObjects(cubes);\n\n      if (collisionResults.length === 1 && collisionResults[0].distance < directionVector.length() && collisionResults[0].object.position.z > -0.25) {\n        debugger;\n        collisionResults[0].object.material.transparent = true;\n        collisionResults[0].object.material.opacity = 0.4;\n        collisionResults[0].object.material.color.setHex(0xFF0000);\n        cancelAnimationFrame(game);\n      }\n    }\n\n    renderer.render(scene, camera);\n  };\n\n  var renderNewCube = function renderNewCube() {\n    var shape = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshStandardMaterial({\n      color: 0xffffff\n    });\n    var box = new THREE.Mesh(shape, material);\n    cubes.push(box);\n    var xCord = Math.random() * 12 - 6;\n    var ySample = yLevels[Math.floor(Math.random() * yLevels.length)];\n    box.position.set(xCord, ySample, -50);\n    box.castShadow = true;\n    box.receiveShadow = true;\n    scene.add(box);\n  };\n\n  var renderNewSphere = function renderNewSphere() {\n    if (Math.random() >= 0.7) {\n      var shape = new THREE.SphereGeometry(0.5);\n      var material = new THREE.MeshStandardMaterial({\n        color: 0xffffff\n      });\n      var sphere = new THREE.Mesh(shape, material);\n      cubes.push(sphere);\n      var xCord = Math.random() * 12 - 6;\n      var ySample = yLevels[Math.floor(Math.random() * yLevels.length)];\n      sphere.position.set(xCord, ySample, -50);\n      sphere.castShadow = true;\n      sphere.receiveShadow = true;\n      scene.add(sphere);\n    }\n  };\n\n  var renderBar = function renderBar() {\n    if (Math.random() >= 0.95) {\n      var shape = new THREE.BoxGeometry(10, 1, 1);\n      var material = new THREE.MeshStandardMaterial({\n        color: 0xffffff\n      });\n      var box = new THREE.Mesh(shape, material);\n      cubes.push(box);\n      var ySample = yLevels[Math.floor(Math.random() * yLevels.length)];\n      var xCord = Math.random() * 12 - 6;\n      box.position.set(xCord, ySample, -50);\n      box.castShadow = true;\n      box.receiveShadow = true;\n      scene.add(box);\n    }\n  };\n\n  var keyDown = function keyDown(e) {\n    keyboard[e.keyCode] = true;\n  };\n\n  var keyUp = function keyUp(e) {\n    keyboard[e.keyCode] = false;\n  };\n\n  window.addEventListener('keydown', keyDown);\n  window.addEventListener('keyup', keyUp);\n  init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./game.js\n");

/***/ })

/******/ });